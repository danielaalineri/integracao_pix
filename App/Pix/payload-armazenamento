<?php

namespace App\Pix;
class Payload{
     /**
   * IDs do Payload do Pix
   * @var string
   */
  const ID_PAYLOAD_FORMAT_INDICATOR = '00';
  const ID_MERCHANT_ACCOUNT_INFORMATION = '26';
  const ID_MERCHANT_ACCOUNT_INFORMATION_GUI = '00';
  const ID_MERCHANT_ACCOUNT_INFORMATION_KEY = '01';
  const ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION = '02';
  const ID_MERCHANT_CATEGORY_CODE = '52';
  const ID_TRANSACTION_CURRENCY = '53';
  const ID_TRANSACTION_AMOUNT = '54';
  const ID_COUNTRY_CODE = '58';
  const ID_MERCHANT_NAME = '59';
  const ID_MERCHANT_CITY = '60';
  const ID_ADDITIONAL_DATA_FIELD_TEMPLATE = '62';
  const ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID = '05';
  const ID_CRC16 = '63';
  /**
   * @var string
   */
  private $pixKey;

  /**
   * Descrição de pagamento
   * @var string
   */
  private $description;

    /**Nome do titular da conta
     * @var string
     */
  private $merchantName;

   /**Cidade do titular da conta
   * @var string
   */
  private $merchantCity;

  /**ID da transação
   * @var string
   */
  private $txid;

    /**Valor da transação
   * @var string
   */
  private $amount;

 /**
  * Método responsável por definir o valor de $pixKey
  * @param string $pixKey
  */

public function setPixKey($pixKey){
  $this->pixKey = $pixKey;
  return $this;
}

/**
 * Método responsável por definir o valor da $description
 * @param string $description
 */
public function setDescription($description){
  $this->description = $description;
  return $this;
}

/**
 * Método responsável por definir o valor da $merchantName
 * @param string $merchantName
 */
public function setMerchantName($merchantName){
  $this->merchantName = $merchantName;
  return $this;
}

/**
 * Método responsável por definir o valor da $merchantCity
 * @param string $merchantCity
 */
public function setMerchantCity($merchantCity){
  $this->merchantCity = $merchantCity;
  return $this;
}

/**
 * Método responsável por definir o valor da $txid
 * @param string $merchantCity
 */
public function setTxid($txid){
  $this->txid = $txid;
  return $this;
}

/**
 * Método responsável por definir o valor da $amount
 * @param float $amount
 */
public function setAmount($amount){
  $this->amount = (string)number_format($amount,2,'.','') ;
  return $this;
}

/**
 * Responsável por retornar o valor completo de um objeto do payload
 * @param string $id
 * @param string $value
 * @return string $id.$size.$value
 * 
 */

 private function getValue($id, $value){
  $size = str_pad(strlen($value),02,'0',STR_PAD_LEFT);
  return $id.$size.$value;
  echo "<pre>";
  print_r($size);
  echo "</pre>"; exit;
  
 }

  /**
 * Método responsável por retornar o código completo do payload pix
 * @return string
 */

private function getMerchantAccountInformation(){
  //DOÍNIO DO BANCO
  $gui = $this->getValue(self::ID_MERCHANT_ACCOUNT_INFORMATION_GUI,'br.gov.bcb.pix');

  //CHAVE PIX
  $key = $this->getValue(self::ID_MERCHANT_ACCOUNT_INFORMATION_KEY, $this->pixKey); 

  //DESCRIÇÃO DO PAGAMENTO
  $description = strlen($this->description) ? $this->getValue(self::ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION,$this->description) :'';
  //VALOR COMPLETO DA CONTA
  return $this->getValue(self::ID_MERCHANT_ACCOUNT_INFORMATION, $gui.$key.$description);
  
} 

/**
 * Método responsável por gerar o código completo do payload pix
 * @return string
 */

 public function getPayload(){
  //CRIA O PLAYLOAD
  $payload = $this->getValue(self::ID_PAYLOAD_FORMAT_INDICATOR, '01');
             $this->getMerchantAccountInformation();

  return $payload;
  
}
  
}








